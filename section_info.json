{
  "pr_link": "https://github.com/pingcap/docs-cn/pull/20020/files",
  "files": [
    {
      "file_path": "information-schema/information-schema-resource-groups.md",
      "patch": "@@ -13,14 +13,16 @@ DESC resource_groups;\n ```\n \n ```sql\n-+------------+-------------+------+------+---------+-------+\n-| Field      | Type        | Null | Key  | Default | Extra |\n-+------------+-------------+------+------+---------+-------+\n-| NAME       | varchar(32) | NO   |      | NULL    |       |\n-| RU_PER_SEC | bigint(21)  | YES  |      | NULL    |       |\n-| PRIORITY   | varchar(6)  | YES  |      | NULL    |       |\n-| BURSTABLE  | varchar(3)  | YES  |      | NULL    |       |\n-+------------+-------------+------+------+---------+-------+\n++-------------+--------------+------+------+---------+-------+\n+| Field       | Type         | Null | Key  | Default | Extra |\n++-------------+--------------+------+------+---------+-------+\n+| NAME        | varchar(32)  | NO   |      | NULL    |       |\n+| RU_PER_SEC  | varchar(21)  | YES  |      | NULL    |       |\n+| PRIORITY    | varchar(6)   | YES  |      | NULL    |       |\n+| BURSTABLE   | varchar(3)   | YES  |      | NULL    |       |\n+| QUERY_LIMIT | varchar(256) | YES  |      | NULL    |       |\n+| BACKGROUND  | varchar(256) | YES  |      | NULL    |       |\n++-------------+--------------+------+------+---------+-------+\n 3 rows in set (0.00 sec)\n ```\n \n@@ -31,11 +33,11 @@ SELECT * FROM information_schema.resource_groups; -- 查看资源组，TiDB 默\n ```\n \n ```sql\n-+---------+------------+----------+-----------+\n-| NAME    | RU_PER_SEC | PRIORITY | BURSTABLE |\n-+---------+------------+----------+-----------+\n-| default | UNLIMITED  | MEDIUM   | YES       |\n-+---------+------------+----------+-----------+\n++---------+------------+----------+----------------+-------------+------------+\n+| NAME    | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT | BACKGROUND |\n++---------+------------+----------+----------------+-------------+------------+\n+| default | UNLIMITED  | MEDIUM   | YES(UNLIMITED) | NULL        | NULL       |\n++---------+------------+----------+----------------+-------------+------------+\n ```\n \n ```sql\n@@ -64,11 +66,11 @@ SELECT * FROM information_schema.resource_groups WHERE NAME = 'rg1'; -- 查看\n ```\n \n ```sql\n-+------+------------+----------+-----------+-------------+\n-| NAME | RU_PER_SEC | PRIORITY | BURSTABLE | QUERY_LIMIT |\n-+------+------------+----------+-----------+-------------+\n-| rg1  | 1000       | MEDIUM   | NO        | NULL        |\n-+------+------------+----------+-----------+-------------+\n++------+------------+----------+-----------+-------------+------------+\n+| NAME | RU_PER_SEC | PRIORITY | BURSTABLE | QUERY_LIMIT | BACKGROUND |\n++------+------------+----------+-----------+-------------+------------+\n+| rg1  | 1000       | MEDIUM   | NO        | NULL        | NULL       |\n++------+------------+----------+-----------+-------------+------------+\n 1 row in set (0.00 sec)\n ```\n \n@@ -77,8 +79,8 @@ SELECT * FROM information_schema.resource_groups WHERE NAME = 'rg1'; -- 查看\n * `NAME`：资源组名称。\n * `RU_PER_SEC`：资源组的回填速度，单位为每秒回填的 [Request Unit (RU)](/tidb-resource-control-ru-groups.md#什么是-request-unit-ru) 数量。\n * `PRIORITY`：任务在 TiKV 上处理的绝对优先级。不同的资源按照 `PRIORITY` 的设置进行调度，`PRIORITY` 高的任务会被优先调度。如果资源组的 `PRIORITY` 相同，则会根据 `RU_PER_SEC` 的配置按比例调度。如果不指定 `PRIORITY`，资源组的默认优先级为 `MEDIUM`。\n-* `BURSTABLE`：是否允许此资源组超额使用剩余的系统资源。\n+* `BURSTABLE`：是否允许此资源组超额使用剩余的系统资源。分为三种模式，`OFF`，即不允许此资源组超额使用剩余的系统资源；`MODERATED`，即有限度地允许此资源组超额使用剩余的系统资源，优先保证资源组限额内的资源得到分配；`UNLIMITED`，即无限度地允许此资源组超额使用剩余的系统资源，与限额内资源同等竞争。如果没有为 `BURSTABLE` 指定目标值，将默认启用 `MODERATED`。\n \n > **注意：**\n >\n-> TiDB 集群在初始化时会自动创建 `default` 资源组，其 `RU_PER_SEC` 的默认值为 `UNLIMITED` (等同于 `INT` 类型最大值，即 `2147483647`)，且为 `BURSTABLE` 模式。所有未绑定资源组的请求都将自动绑定至此资源组。在新建配置其他资源组时，建议根据实际情况修改 `default` 资源组的配置。\n+> TiDB 集群在初始化时会自动创建 `default` 资源组，其 `RU_PER_SEC` 的默认值为 `UNLIMITED` (等同于 `INT` 类型最大值，即 `2147483647`)，且 `BURSTABLE` 为 `UNLIMITED` 模式。对于没有绑定资源组的语句会自动绑定至此资源组。此资源组不支持删除，但允许修改其 RU 的配置。",
      "sections": [
        {
          "section_path": "RESOURCE_GROUPS",
          "content": "\n`RESOURCE_GROUPS` 表展示所有资源组 (resource group) 的信息，见[使用资源管控 (Resource Control) 实现资源组限制和流控](/tidb-resource-control-ru-groups.md)。\n\n```sql\nUSE information_schema;\nDESC resource_groups;\n```\n\n```sql\n+-------------+--------------+------+------+---------+-------+\n| Field       | Type         | Null | Key  | Default | Extra |\n+-------------+--------------+------+------+---------+-------+\n| NAME        | varchar(32)  | NO   |      | NULL    |       |\n| RU_PER_SEC  | varchar(21)  | YES  |      | NULL    |       |\n| PRIORITY    | varchar(6)   | YES  |      | NULL    |       |\n| BURSTABLE   | varchar(3)   | YES  |      | NULL    |       |\n| QUERY_LIMIT | varchar(256) | YES  |      | NULL    |       |\n| BACKGROUND  | varchar(256) | YES  |      | NULL    |       |\n+-------------+--------------+------+------+---------+-------+\n3 rows in set (0.00 sec)\n```\n",
          "start_line": 7,
          "end_line": 28
        },
        {
          "section_path": "示例",
          "content": "\n```sql\nSELECT * FROM information_schema.resource_groups; -- 查看资源组，TiDB 默认预置 `default` 资源组\n```\n\n```sql\n+---------+------------+----------+----------------+-------------+------------+\n| NAME    | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT | BACKGROUND |\n+---------+------------+----------+----------------+-------------+------------+\n| default | UNLIMITED  | MEDIUM   | YES(UNLIMITED) | NULL        | NULL       |\n+---------+------------+----------+----------------+-------------+------------+\n```\n\n```sql\nCREATE RESOURCE GROUP rg1 RU_PER_SEC=1000; -- 创建资源组 `rg1`\n```\n\n```sql\nQuery OK, 0 rows affected (0.34 sec)\n```\n\n```sql\nSHOW CREATE RESOURCE GROUP rg1; -- 显示 `rg1` 资源组的定义\n```\n\n```sql\n+----------------+---------------------------------------------------------------+\n| Resource_Group | Create Resource Group                                         |\n+----------------+---------------------------------------------------------------+\n| rg1            | CREATE RESOURCE GROUP `rg1` RU_PER_SEC=1000 PRIORITY=\"MEDIUM\" |\n+----------------+---------------------------------------------------------------+\n1 row in set (0.00 sec)\n```\n\n```sql\nSELECT * FROM information_schema.resource_groups WHERE NAME = 'rg1'; -- 查看资源组 `rg1`\n```\n\n```sql\n+------+------------+----------+-----------+-------------+------------+\n| NAME | RU_PER_SEC | PRIORITY | BURSTABLE | QUERY_LIMIT | BACKGROUND |\n+------+------------+----------+-----------+-------------+------------+\n| rg1  | 1000       | MEDIUM   | NO        | NULL        | NULL       |\n+------+------------+----------+-----------+-------------+------------+\n1 row in set (0.00 sec)\n```\n\n`RESOURCE_GROUPS` 表中列的含义如下：\n\n* `NAME`：资源组名称。\n* `RU_PER_SEC`：资源组的回填速度，单位为每秒回填的 [Request Unit (RU)](/tidb-resource-control-ru-groups.md#什么是-request-unit-ru) 数量。\n* `PRIORITY`：任务在 TiKV 上处理的绝对优先级。不同的资源按照 `PRIORITY` 的设置进行调度，`PRIORITY` 高的任务会被优先调度。如果资源组的 `PRIORITY` 相同，则会根据 `RU_PER_SEC` 的配置按比例调度。如果不指定 `PRIORITY`，资源组的默认优先级为 `MEDIUM`。\n* `BURSTABLE`：是否允许此资源组超额使用剩余的系统资源。分为三种模式，`OFF`，即不允许此资源组超额使用剩余的系统资源；`MODERATED`，即有限度地允许此资源组超额使用剩余的系统资源，优先保证资源组限额内的资源得到分配；`UNLIMITED`，即无限度地允许此资源组超额使用剩余的系统资源，与限额内资源同等竞争。如果没有为 `BURSTABLE` 指定目标值，将默认启用 `MODERATED`。\n\n> **注意：**\n>\n> TiDB 集群在初始化时会自动创建 `default` 资源组，其 `RU_PER_SEC` 的默认值为 `UNLIMITED` (等同于 `INT` 类型最大值，即 `2147483647`)，且 `BURSTABLE` 为 `UNLIMITED` 模式。对于没有绑定资源组的语句会自动绑定至此资源组。此资源组不支持删除，但允许修改其 RU 的配置。\n",
          "start_line": 30,
          "end_line": 87
        }
      ]
    },
    {
      "file_path": "sql-statements/sql-statement-alter-resource-group.md",
      "patch": "@@ -28,8 +28,10 @@ ResourceGroupOptionList ::=\n DirectResourceGroupOption ::=\n     \"RU_PER_SEC\" EqOpt LengthNum\n |   \"PRIORITY\" EqOpt ResourceGroupPriorityOption\n-|   \"BURSTABLE\"\n-|   \"BURSTABLE\" EqOpt Boolean\n+|\t\"BURSTABLE\"\n+|\t\"BURSTABLE\" EqOpt \"MODERATED\"\n+|\t\"BURSTABLE\" EqOpt \"UNLIMITED\"\n+|\t\"BURSTABLE\" EqOpt \"OFF\"\n |   \"QUERY_LIMIT\" EqOpt '(' ResourceGroupRunawayOptionList ')'\n |   \"QUERY_LIMIT\" EqOpt '(' ')'\n |   \"QUERY_LIMIT\" EqOpt \"NULL\"\n@@ -80,7 +82,7 @@ TiDB 支持以下 `DirectResourceGroupOption`, 其中 [Request Unit (RU)](/tidb-\n |---------------|--------------|--------------------------------------|\n | `RU_PER_SEC`  | 每秒 RU 填充的速度 | `RU_PER_SEC = 500` 表示此资源组每秒回填 500 个 RU。 |\n | `PRIORITY`    | 任务在 TiKV 上处理的绝对优先级  | `PRIORITY = HIGH` 表示优先级高。若未指定则默认为 `MEDIUM`。 |\n-| `BURSTABLE`   | 允许对应的资源组超出配额后使用空余的系统资源。 |\n+| `BURSTABLE`   | 允许对应的资源组超出配额后使用空余的系统资源。分为三种模式，`OFF`，即不允许此资源组超额使用剩余的系统资源；`MODERATED`，即有限度地允许此资源组超额使用剩余的系统资源；`UNLIMITED`，即无限度地允许此资源组超额使用剩余的系统资源。如果没有为 `BURSTABLE` 指定目标值，将默认启用 `MODERATED`。 |\n | `QUERY_LIMIT` | 当查询执行满足该条件时，识别该查询为 Runaway Query 并执行相应的操作 | `QUERY_LIMIT=(EXEC_ELAPSED='60s', ACTION=KILL, WATCH=EXACT DURATION='10m')` 表示当执行时间超过 60 秒后识别为 Runaway Query，对该查询执行终止操作，并在 10 分钟内对同样的 SQL 直接执行终止操作。`QUERY_LIMIT=()` 或 `QUERY_LIMIT=NULL` 则表示不进行 Runaway 控制。具体参数介绍参见[管理资源消耗超出预期的查询 (Runaway Queries)](/tidb-resource-control-runaway-queries.md)。 ｜\n | `BACKGROUND`  | 后台任务相关的设置。具体参数介绍参见[管理后台任务](/tidb-resource-control-background-tasks.md) | `BACKGROUND=(TASK_TYPES=\"br,stats\", UTILIZATION_LIMIT=30)` 表示将备份恢复和收集统计信息相关的任务作为后台任务调度，并且后台任务最多可以使用 TiKV 30% 的资源。 |\n \n@@ -164,11 +166,11 @@ SELECT * FROM information_schema.resource_groups WHERE NAME ='default';\n ```\n \n ```sql\n-+---------+------------+----------+-----------+-------------+-------------------------------------------+\n-| NAME    | RU_PER_SEC | PRIORITY | BURSTABLE | QUERY_LIMIT | BACKGROUND                                |\n-+---------+------------+----------+-----------+-------------+-------------------------------------------+\n-| default | UNLIMITED  | MEDIUM   | YES       | NULL        | TASK_TYPES='br,ddl', UTILIZATION_LIMIT=30 |\n-+---------+------------+----------+-----------+-------------+-------------------------------------------+\n++---------+------------+----------+----------------+-------------+------------+\n+| NAME    | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT | BACKGROUND |\n++---------+------------+----------+----------------+-------------+------------+\n+| default | UNLIMITED  | MEDIUM   | YES(UNLIMITED) | NULL        | NULL       |\n++---------+------------+----------+----------------+-------------+------------+\n 1 rows in set (1.30 sec)\n ```\n ",
      "sections": [
        {
          "section_path": "语法图",
          "content": "\n```ebnf+diagram\nAlterResourceGroupStmt ::=\n   \"ALTER\" \"RESOURCE\" \"GROUP\" IfExists ResourceGroupName ResourceGroupOptionList\n\nIfExists ::=\n    ('IF' 'EXISTS')?\n\nResourceGroupName ::=\n    Identifier\n|   \"DEFAULT\"\n\nResourceGroupOptionList ::=\n    DirectResourceGroupOption\n|   ResourceGroupOptionList DirectResourceGroupOption\n|   ResourceGroupOptionList ',' DirectResourceGroupOption\n\nDirectResourceGroupOption ::=\n    \"RU_PER_SEC\" EqOpt LengthNum\n|   \"PRIORITY\" EqOpt ResourceGroupPriorityOption\n|\t\"BURSTABLE\"\n|\t\"BURSTABLE\" EqOpt \"MODERATED\"\n|\t\"BURSTABLE\" EqOpt \"UNLIMITED\"\n|\t\"BURSTABLE\" EqOpt \"OFF\"\n|   \"QUERY_LIMIT\" EqOpt '(' ResourceGroupRunawayOptionList ')'\n|   \"QUERY_LIMIT\" EqOpt '(' ')'\n|   \"QUERY_LIMIT\" EqOpt \"NULL\"\n|   \"BACKGROUND\" EqOpt '(' BackgroundOptionList ')'\n|   \"BACKGROUND\" EqOpt '(' ')'\n|   \"BACKGROUND\" EqOpt \"NULL\"\n\nResourceGroupPriorityOption ::=\n    LOW\n|   MEDIUM\n|   HIGH\n\nResourceGroupRunawayOptionList ::=\n    DirectResourceGroupRunawayOption\n|   ResourceGroupRunawayOptionList DirectResourceGroupRunawayOption\n|   ResourceGroupRunawayOptionList ',' DirectResourceGroupRunawayOption\n\nDirectResourceGroupRunawayOption ::=\n    \"EXEC_ELAPSED\" EqOpt stringLit\n|   \"PROCESSED_KEYS\" EqOpt intLit\n|   \"RU\" EqOpt intLit\n|   \"ACTION\" EqOpt ResourceGroupRunawayActionOption\n|   \"WATCH\" EqOpt ResourceGroupRunawayWatchOption \"DURATION\" EqOpt stringLit\n\nResourceGroupRunawayWatchOption ::=\n    EXACT\n|   SIMILAR\n\nResourceGroupRunawayActionOption ::=\n    DRYRUN\n|   COOLDOWN\n|   KILL\n|   \"SWITCH_GROUP\" '(' ResourceGroupName ')'\n\nBackgroundOptionList ::=\n    DirectBackgroundOption\n|   BackgroundOptionList DirectBackgroundOption\n|   BackgroundOptionList ',' DirectBackgroundOption\n\nDirectBackgroundOption ::=\n    \"TASK_TYPES\" EqOpt stringLit\n|   \"UTILIZATION_LIMIT\" EqOpt LengthNum\n```\n\nTiDB 支持以下 `DirectResourceGroupOption`, 其中 [Request Unit (RU)](/tidb-resource-control-ru-groups.md#什么是-request-unit-ru) 是 TiDB 对 CPU、IO 等系统资源统一抽象的单位。\n\n| 参数            | 含义           | 举例                                   |\n|---------------|--------------|--------------------------------------|\n| `RU_PER_SEC`  | 每秒 RU 填充的速度 | `RU_PER_SEC = 500` 表示此资源组每秒回填 500 个 RU。 |\n| `PRIORITY`    | 任务在 TiKV 上处理的绝对优先级  | `PRIORITY = HIGH` 表示优先级高。若未指定则默认为 `MEDIUM`。 |\n| `BURSTABLE`   | 允许对应的资源组超出配额后使用空余的系统资源。分为三种模式，`OFF`，即不允许此资源组超额使用剩余的系统资源；`MODERATED`，即有限度地允许此资源组超额使用剩余的系统资源；`UNLIMITED`，即无限度地允许此资源组超额使用剩余的系统资源。如果没有为 `BURSTABLE` 指定目标值，将默认启用 `MODERATED`。 |\n| `QUERY_LIMIT` | 当查询执行满足该条件时，识别该查询为 Runaway Query 并执行相应的操作 | `QUERY_LIMIT=(EXEC_ELAPSED='60s', ACTION=KILL, WATCH=EXACT DURATION='10m')` 表示当执行时间超过 60 秒后识别为 Runaway Query，对该查询执行终止操作，并在 10 分钟内对同样的 SQL 直接执行终止操作。`QUERY_LIMIT=()` 或 `QUERY_LIMIT=NULL` 则表示不进行 Runaway 控制。具体参数介绍参见[管理资源消耗超出预期的查询 (Runaway Queries)](/tidb-resource-control-runaway-queries.md)。 ｜\n| `BACKGROUND`  | 后台任务相关的设置。具体参数介绍参见[管理后台任务](/tidb-resource-control-background-tasks.md) | `BACKGROUND=(TASK_TYPES=\"br,stats\", UTILIZATION_LIMIT=30)` 表示将备份恢复和收集统计信息相关的任务作为后台任务调度，并且后台任务最多可以使用 TiKV 30% 的资源。 |\n\n> **注意：**\n>\n> - `ALTER RESOURCE GROUP` 语句只能在全局变量 [`tidb_enable_resource_control`](/system-variables.md#tidb_enable_resource_control-从-v660-版本开始引入) 参数设置为 `ON` 时才能执行。\n> - `ALTER RESOURCE GROUP` 语句支持以增量方式修改，未指定的参数保持不变。但其中 `QUERY_LIMIT` 和 `BACKGROUND` 各自作为一个整体，无法部分修改其中的参数。\n> - 目前仅 `default` 资源组支持修改 `BACKGROUND` 相关设置。\n",
          "start_line": 11,
          "end_line": 94
        },
        {
          "section_path": "示例",
          "content": "\n创建一个名为 `rg1` 的资源组，并修改它的属性。\n\n```sql\nDROP RESOURCE GROUP IF EXISTS rg1;\n```\n\n```sql\nQuery OK, 0 rows affected (0.22 sec)\n```\n\n```sql\nCREATE RESOURCE GROUP IF NOT EXISTS rg1\n  RU_PER_SEC = 100\n  BURSTABLE;\n```\n\n```sql\nQuery OK, 0 rows affected (0.08 sec)\n```\n\n```sql\nSELECT * FROM information_schema.resource_groups WHERE NAME ='rg1';\n```\n\n```sql\n+------+------------+----------+-----------+-------------+------------+\n| NAME | RU_PER_SEC | PRIORITY | BURSTABLE | QUERY_LIMIT | BACKGROUND |\n+------+------------+----------+-----------+-------------+------------+\n| rg1  | 100        | MEDIUM   | NO        | NULL        | NULL       |\n+------+------------+----------+-----------+-------------+------------+\n1 rows in set (1.30 sec)\n```\n\n```sql\nALTER RESOURCE GROUP rg1\n  RU_PER_SEC = 200\n  PRIORITY = LOW\n  QUERY_LIMIT = (EXEC_ELAPSED='1s' ACTION=COOLDOWN WATCH=EXACT DURATION '30s');\n```\n\n```sql\nQuery OK, 0 rows affected (0.08 sec)\n```\n\n```sql\nSELECT * FROM information_schema.resource_groups WHERE NAME ='rg1';\n```\n\n```sql\n+------+------------+----------+-----------+----------------------------------------------------------------+------------+\n| NAME | RU_PER_SEC | PRIORITY | BURSTABLE | QUERY_LIMIT                                                    | BACKGROUND |\n+------+------------+----------+-----------+----------------------------------------------------------------+------------+\n| rg1  | 200        | LOW      | NO        | EXEC_ELAPSED='1s', ACTION=COOLDOWN, WATCH=EXACT DURATION='30s' | NULL       |\n+------+------------+----------+-----------+----------------------------------------------------------------+------------+\n1 rows in set (1.30 sec)\n```\n\n修改 `default` 资源组的后台任务 `BACKGROUND` 相关设置。\n\n```sql\nALTER RESOURCE GROUP default BACKGROUND = (TASK_TYPES = \"br,ddl\", UTILIZATION_LIMIT=30);\n```\n\n```sql\nQuery OK, 0 rows affected (0.08 sec)\n```\n\n```sql\nSELECT * FROM information_schema.resource_groups WHERE NAME ='default';\n```\n\n```sql\n+---------+------------+----------+----------------+-------------+------------+\n| NAME    | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT | BACKGROUND |\n+---------+------------+----------+----------------+-------------+------------+\n| default | UNLIMITED  | MEDIUM   | YES(UNLIMITED) | NULL        | NULL       |\n+---------+------------+----------+----------------+-------------+------------+\n1 rows in set (1.30 sec)\n```\n",
          "start_line": 96,
          "end_line": 176
        }
      ]
    },
    {
      "file_path": "sql-statements/sql-statement-create-resource-group.md",
      "patch": "@@ -28,8 +28,10 @@ ResourceGroupOptionList ::=\n DirectResourceGroupOption ::=\n     \"RU_PER_SEC\" EqOpt stringLit\n |   \"PRIORITY\" EqOpt ResourceGroupPriorityOption\n-|   \"BURSTABLE\"\n-|   \"BURSTABLE\" EqOpt Boolean\n+|\t\"BURSTABLE\"\n+|\t\"BURSTABLE\" EqOpt \"MODERATED\"\n+|\t\"BURSTABLE\" EqOpt \"UNLIMITED\"\n+|\t\"BURSTABLE\" EqOpt \"OFF\"\n |   \"QUERY_LIMIT\" EqOpt '(' ResourceGroupRunawayOptionList ')'\n |   \"QUERY_LIMIT\" EqOpt '(' ')'\n |   \"QUERY_LIMIT\" EqOpt \"NULL\"\n@@ -77,13 +79,13 @@ TiDB 支持以下 `DirectResourceGroupOption`, 其中 [Request Unit (RU)](/tidb-\n |---------------|--------------|--------------------------------------|\n | `RU_PER_SEC`  | 每秒 RU 填充的速度 | `RU_PER_SEC = 500` 表示此资源组每秒回填 500 个 RU。 |\n | `PRIORITY`    | 任务在 TiKV 上处理的绝对优先级  | `PRIORITY = HIGH` 表示优先级高。若未指定，则默认为 `MEDIUM`。 |\n-| `BURSTABLE`   | 允许对应的资源组超出配额后使用空余的系统资源。 | \n+| `BURSTABLE`   | 允许对应的资源组超出配额后使用空余的系统资源。分为三种模式，`OFF`，即不允许此资源组超额使用剩余的系统资源；`MODERATED`，即有限度地允许此资源组超额使用剩余的系统资源；`UNLIMITED`，即无限度地允许此资源组超额使用剩余的系统资源。如果没有为 `BURSTABLE` 指定目标值，将默认启用 `MODERATED`。 | \n | `QUERY_LIMIT` | 当查询执行满足该条件时，识别该查询为 Runaway Query 并进行相应的控制 | `QUERY_LIMIT=(EXEC_ELAPSED='60s', ACTION=KILL, WATCH=EXACT DURATION='10m')` 表示当执行时间超过 60 秒后识别为 Runaway Query，对该查询执行终止操作，并在 10 分钟内对同样的 SQL 直接执行终止操作。`QUERY_LIMIT=()` 或 `QUERY_LIMIT=NULL` 则表示不进行 Runaway 控制。具体参数介绍详见[管理资源消耗超出预期的查询 (Runaway Queries)](/tidb-resource-control-runaway-queries.md)。 ｜\n \n > **注意：**\n >\n > - `CREATE RESOURCE GROUP` 语句只能在全局变量 [`tidb_enable_resource_control`](/system-variables.md#tidb_enable_resource_control-从-v660-版本开始引入) 设置为 `ON` 时才能执行。\n-> - TiDB 集群在初始化时会自动创建 `default` 资源组，其 `RU_PER_SEC` 的默认值为 `UNLIMITED` (等同于 `INT` 类型最大值，即 `2147483647`)，且为 `BURSTABLE` 模式。所有未绑定资源组的请求都将自动绑定至此资源组。在新建配置其他资源组时，建议根据实际情况修改 `default` 资源组的配置。\n+> - TiDB 集群在初始化时会自动创建 `default` 资源组，其 `RU_PER_SEC` 的默认值为 `UNLIMITED` (等同于 `INT` 类型最大值，即 `2147483647`)，且 `BURSTABLE` 为 `UNLIMITED` 模式。所有未绑定资源组的请求都将自动绑定至此资源组。在新建配置其他资源组时，建议根据实际情况修改 `default` 资源组的配置。\n > - 目前仅 `default` 资源组支持修改 `BACKGROUND` 相关设置。\n \n ## 示例\n@@ -123,12 +125,12 @@ SELECT * FROM information_schema.resource_groups WHERE NAME ='rg1' or NAME = 'rg\n ```\n \n ```sql\n-+------+------------+----------+-----------+---------------------------------+\n-| NAME | RU_PER_SEC | PRIORITY | BURSTABLE | QUERY_LIMIT                     |\n-+------+------------+----------+-----------+---------------------------------+\n-| rg1  | 100        | HIGH     | YES       | NULL                            |\n-| rg2  | 200        | MEDIUM   | NO        | EXEC_ELAPSED=100ms, ACTION=KILL |\n-+------+------------+----------+-----------+---------------------------------+\n++------+------------+----------+----------------+-----------------------------------+------------+\n+| NAME | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT                       | BACKGROUND |\n++------+------------+----------+----------------+-----------------------------------+------------+\n+| rg1  | 100        | HIGH     | YES(UNLIMITED) | NULL                              | NULL       |\n+| rg2  | 200        | MEDIUM   | NO             | EXEC_ELAPSED='100ms', ACTION=KILL | NULL       |\n++------+------------+----------+----------------+-----------------------------------+------------+\n 2 rows in set (1.30 sec)\n ```\n ",
      "sections": [
        {
          "section_path": "语法图",
          "content": "\n```ebnf+diagram\nCreateResourceGroupStmt ::=\n   \"CREATE\" \"RESOURCE\" \"GROUP\" IfNotExists ResourceGroupName ResourceGroupOptionList\n\nIfNotExists ::=\n    ('IF' 'NOT' 'EXISTS')?\n\nResourceGroupName ::=\n    Identifier\n|   \"DEFAULT\"\n\nResourceGroupOptionList ::=\n    DirectResourceGroupOption\n|   ResourceGroupOptionList DirectResourceGroupOption\n|   ResourceGroupOptionList ',' DirectResourceGroupOption\n\nDirectResourceGroupOption ::=\n    \"RU_PER_SEC\" EqOpt stringLit\n|   \"PRIORITY\" EqOpt ResourceGroupPriorityOption\n|\t\"BURSTABLE\"\n|\t\"BURSTABLE\" EqOpt \"MODERATED\"\n|\t\"BURSTABLE\" EqOpt \"UNLIMITED\"\n|\t\"BURSTABLE\" EqOpt \"OFF\"\n|   \"QUERY_LIMIT\" EqOpt '(' ResourceGroupRunawayOptionList ')'\n|   \"QUERY_LIMIT\" EqOpt '(' ')'\n|   \"QUERY_LIMIT\" EqOpt \"NULL\"\n|   \"BACKGROUND\" EqOpt '(' BackgroundOptionList ')'\n|   \"BACKGROUND\" EqOpt '(' ')'\n|   \"BACKGROUND\" EqOpt \"NULL\"\n\nResourceGroupPriorityOption ::=\n    LOW\n|   MEDIUM\n|   HIGH\n\nResourceGroupRunawayOptionList ::= \n    DirectResourceGroupRunawayOption\n|   ResourceGroupRunawayOptionList DirectResourceGroupRunawayOption\n|   ResourceGroupRunawayOptionList ',' DirectResourceGroupRunawayOption\n\nDirectResourceGroupRunawayOption ::=\n    \"EXEC_ELAPSED\" EqOpt stringLit\n|   \"PROCESSED_KEYS\" EqOpt intLit\n|   \"RU\" EqOpt intLit\n|   \"ACTION\" EqOpt ResourceGroupRunawayActionOption\n|   \"WATCH\" EqOpt ResourceGroupRunawayWatchOption WatchDurationOption\n\nWatchDurationOption ::=\n    (\"DURATION\" EqOpt stringLit | \"DURATION\" EqOpt \"UNLIMITED\")?\n\nResourceGroupRunawayWatchOption ::=\n    EXACT\n|   SIMILAR\n|   PLAN\n\nResourceGroupRunawayActionOption ::=\n    DRYRUN\n|   COOLDOWN\n|   KILL\n|   \"SWITCH_GROUP\" '(' ResourceGroupName ')'\n```\n\n资源组的 `ResourceGroupName` 是全局唯一的，不允许重复。\n\nTiDB 支持以下 `DirectResourceGroupOption`, 其中 [Request Unit (RU)](/tidb-resource-control-ru-groups.md#什么是-request-unit-ru) 是 TiDB 对 CPU、IO 等系统资源统一抽象的单位。\n\n| 参数            | 含义           | 举例                                   |\n|---------------|--------------|--------------------------------------|\n| `RU_PER_SEC`  | 每秒 RU 填充的速度 | `RU_PER_SEC = 500` 表示此资源组每秒回填 500 个 RU。 |\n| `PRIORITY`    | 任务在 TiKV 上处理的绝对优先级  | `PRIORITY = HIGH` 表示优先级高。若未指定，则默认为 `MEDIUM`。 |\n| `BURSTABLE`   | 允许对应的资源组超出配额后使用空余的系统资源。分为三种模式，`OFF`，即不允许此资源组超额使用剩余的系统资源；`MODERATED`，即有限度地允许此资源组超额使用剩余的系统资源；`UNLIMITED`，即无限度地允许此资源组超额使用剩余的系统资源。如果没有为 `BURSTABLE` 指定目标值，将默认启用 `MODERATED`。 | \n| `QUERY_LIMIT` | 当查询执行满足该条件时，识别该查询为 Runaway Query 并进行相应的控制 | `QUERY_LIMIT=(EXEC_ELAPSED='60s', ACTION=KILL, WATCH=EXACT DURATION='10m')` 表示当执行时间超过 60 秒后识别为 Runaway Query，对该查询执行终止操作，并在 10 分钟内对同样的 SQL 直接执行终止操作。`QUERY_LIMIT=()` 或 `QUERY_LIMIT=NULL` 则表示不进行 Runaway 控制。具体参数介绍详见[管理资源消耗超出预期的查询 (Runaway Queries)](/tidb-resource-control-runaway-queries.md)。 ｜\n\n> **注意：**\n>\n> - `CREATE RESOURCE GROUP` 语句只能在全局变量 [`tidb_enable_resource_control`](/system-variables.md#tidb_enable_resource_control-从-v660-版本开始引入) 设置为 `ON` 时才能执行。\n> - TiDB 集群在初始化时会自动创建 `default` 资源组，其 `RU_PER_SEC` 的默认值为 `UNLIMITED` (等同于 `INT` 类型最大值，即 `2147483647`)，且 `BURSTABLE` 为 `UNLIMITED` 模式。所有未绑定资源组的请求都将自动绑定至此资源组。在新建配置其他资源组时，建议根据实际情况修改 `default` 资源组的配置。\n> - 目前仅 `default` 资源组支持修改 `BACKGROUND` 相关设置。\n",
          "start_line": 11,
          "end_line": 90
        },
        {
          "section_path": "示例",
          "content": "\n创建 `rg1` 和 `rg2` 两个资源组。\n\n```sql\nDROP RESOURCE GROUP IF EXISTS rg1;\n```\n\n```sql\nQuery OK, 0 rows affected (0.22 sec)\n```\n\n```sql\nCREATE RESOURCE GROUP IF NOT EXISTS rg1\n  RU_PER_SEC = 100\n  PRIORITY = HIGH\n  BURSTABLE;\n```\n\n```sql\nQuery OK, 0 rows affected (0.08 sec)\n```\n\n```sql\nCREATE RESOURCE GROUP IF NOT EXISTS rg2\n  RU_PER_SEC = 200 QUERY_LIMIT=(EXEC_ELAPSED='100ms', ACTION=KILL);\n```\n\n```sql\nQuery OK, 0 rows affected (0.08 sec)\n```\n\n```sql\nSELECT * FROM information_schema.resource_groups WHERE NAME ='rg1' or NAME = 'rg2';\n```\n\n```sql\n+------+------------+----------+----------------+-----------------------------------+------------+\n| NAME | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT                       | BACKGROUND |\n+------+------------+----------+----------------+-----------------------------------+------------+\n| rg1  | 100        | HIGH     | YES(UNLIMITED) | NULL                              | NULL       |\n| rg2  | 200        | MEDIUM   | NO             | EXEC_ELAPSED='100ms', ACTION=KILL | NULL       |\n+------+------------+----------+----------------+-----------------------------------+------------+\n2 rows in set (1.30 sec)\n```\n",
          "start_line": 92,
          "end_line": 136
        }
      ]
    },
    {
      "file_path": "sql-statements/sql-statement-drop-resource-group.md",
      "patch": "@@ -51,11 +51,11 @@ SELECT * FROM information_schema.resource_groups WHERE NAME ='rg1';\n ```\n \n ```sql\n-+------+------------+----------+-----------+-------------+\n-| NAME | RU_PER_SEC | PRIORITY | BURSTABLE | QUERY_LIMIT |\n-+------+------------+----------+-----------+-------------+\n-| rg1  | 500        | MEDIUM   | YES       | NULL        |\n-+------+------------+----------+-----------+-------------+\n++------+------------+----------+----------------+-------------+------------+\n+| NAME | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT | BACKGROUND |\n++------+------------+----------+----------------+-------------+------------+\n+| rg1  | 500        | MEDIUM   | YES(UNLIMITED) | NULL        | NULL       |\n++------+------------+----------+----------------+-------------+------------+\n 1 row in set (0.01 sec)\n ```\n ",
      "sections": [
        {
          "section_path": "示例",
          "content": "\n删除名为 `rg1` 的资源组：\n\n```sql\nDROP RESOURCE GROUP IF EXISTS rg1;\n```\n\n```sql\nQuery OK, 0 rows affected (0.22 sec)\n```\n\n```sql\nCREATE RESOURCE GROUP IF NOT EXISTS rg1 RU_PER_SEC = 500 BURSTABLE;\n```\n\n```sql\nQuery OK, 0 rows affected (0.08 sec)\n```\n\n```sql\nSELECT * FROM information_schema.resource_groups WHERE NAME ='rg1';\n```\n\n```sql\n+------+------------+----------+----------------+-------------+------------+\n| NAME | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT | BACKGROUND |\n+------+------------+----------+----------------+-------------+------------+\n| rg1  | 500        | MEDIUM   | YES(UNLIMITED) | NULL        | NULL       |\n+------+------------+----------+----------------+-------------+------------+\n1 row in set (0.01 sec)\n```\n\n```sql\nDROP RESOURCE GROUP IF EXISTS rg1;\n```\n\n```sql\nQuery OK, 1 rows affected (0.09 sec)\n```\n\n```sql\nSELECT * FROM information_schema.resource_groups WHERE NAME ='rg1';\n```\n\n```sql\nEmpty set (0.00 sec)\n```\n",
          "start_line": 30,
          "end_line": 77
        }
      ]
    },
    {
      "file_path": "tidb-resource-control-background-tasks.md",
      "patch": "@@ -61,11 +61,11 @@ summary: 介绍如何通过资源管控 (Resource Control) 控制后台任务。\n     输出结果如下：\n \n     ```\n-    +---------+------------+----------+-----------+-------------+-------------------------------------------+\n-    | NAME    | RU_PER_SEC | PRIORITY | BURSTABLE | QUERY_LIMIT | BACKGROUND                                |\n-    +---------+------------+----------+-----------+-------------+-------------------------------------------+\n-    | default | UNLIMITED  | MEDIUM   | YES       | NULL        | TASK_TYPES='br,ddl', UTILIZATION_LIMIT=30 |\n-    +---------+------------+----------+-----------+-------------+-------------------------------------------+\n+    +---------+------------+----------+----------------+-------------+------------+\n+    | NAME    | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT | BACKGROUND |\n+    +---------+------------+----------+----------------+-------------+------------+\n+    | default | UNLIMITED  | MEDIUM   | YES(UNLIMITED) | NULL        | NULL       |\n+    +---------+------------+----------+----------------+-------------+------------+\n     ```\n \n 5. 如果希望将当前会话里的任务显式标记为后台类型，你可以使用 `tidb_request_source_type` 显式指定任务类型，如：",
      "sections": [
        {
          "section_path": "示例",
          "content": "\n1. 修改 `default` 资源组，将 `br` 和 `ddl` 标记为后台任务，并配置后台任务最多可使用 TiKV 节点总资源的 30%。\n\n    ```sql\n    ALTER RESOURCE GROUP `default` BACKGROUND=(TASK_TYPES='br,ddl', UTILIZATION_LIMIT=30);\n    ```\n\n2. 修改 `default` 资源组，将后台任务的类型还原为默认值。\n\n    ```sql\n    ALTER RESOURCE GROUP `default` BACKGROUND=NULL;\n    ```\n\n3. 修改 `default` 资源组，将后台任务的类型设置为空，此时此资源组的所有任务类型都不会作为后台任务处理。\n\n    ```sql\n    ALTER RESOURCE GROUP `default` BACKGROUND=(TASK_TYPES=\"\");\n    ```\n\n4. 查看 `default` 资源组的后台任务类型。\n\n    ```sql\n    SELECT * FROM information_schema.resource_groups WHERE NAME=\"default\";\n    ```\n\n    输出结果如下：\n\n    ```\n    +---------+------------+----------+----------------+-------------+------------+\n    | NAME    | RU_PER_SEC | PRIORITY | BURSTABLE      | QUERY_LIMIT | BACKGROUND |\n    +---------+------------+----------+----------------+-------------+------------+\n    | default | UNLIMITED  | MEDIUM   | YES(UNLIMITED) | NULL        | NULL       |\n    +---------+------------+----------+----------------+-------------+------------+\n    ```\n\n5. 如果希望将当前会话里的任务显式标记为后台类型，你可以使用 `tidb_request_source_type` 显式指定任务类型，如：\n\n    ``` sql\n    SET @@tidb_request_source_type=\"background\";\n    /* 添加 background 任务类型 */\n    ALTER RESOURCE GROUP `default` BACKGROUND=(TASK_TYPES=\"background\");\n    /* 在当前会话中执行 LOAD DATA */\n    LOAD DATA INFILE \"s3://resource-control/Lightning/test.customer.aaaa.csv\"\n    ```",
          "start_line": 36,
          "end_line": 79
        }
      ]
    },
    {
      "file_path": "tidb-resource-control-ru-groups.md",
      "patch": "@@ -133,19 +133,24 @@ Request Unit (RU) 是 TiDB 对 CPU、IO 等系统资源的统一抽象的计量\n \n 下面举例说明如何创建资源组。\n \n-1. 创建 `rg1` 资源组，限额是每秒 500 RU，并且允许这个资源组的应用超额占用资源。\n+1. 创建 `rg1` 资源组，限额是每秒 500 RU，并且允许这个资源组的应用超额占用资源。不特意指定的话，其 `BURSTABLE` 模式为 `MODERATED`。\n \n     ```sql\n     CREATE RESOURCE GROUP IF NOT EXISTS rg1 RU_PER_SEC = 500 BURSTABLE;\n     ```\n \n-2. 创建 `rg2` 资源组，RU 的回填速度是每秒 600 RU。在系统资源充足的时候，不允许这个资源组的应用超额占用资源。\n+2. 创建 `rg1` 资源组，限额是每秒 500 RU，并且允许这个资源组的应用超额占用资源，其模式为 `UNLIMITED`。\n+\n+    ```sql\n+    CREATE RESOURCE GROUP IF NOT EXISTS rg1 RU_PER_SEC = 500 BURSTABLE=UNLIMITED;\n+\n+3. 创建 `rg2` 资源组，RU 的回填速度是每秒 600 RU。在系统资源充足的时候，不允许这个资源组的应用超额占用资源。\n \n     ```sql\n     CREATE RESOURCE GROUP IF NOT EXISTS rg2 RU_PER_SEC = 600;\n     ```\n \n-3. 创建 `rg3` 资源组，设置绝对优先级为 `HIGH`。绝对优先级目前支持 `LOW|MEDIUM|HIGH`，资源组的默认绝对优先级为 `MEDIUM`。\n+4. 创建 `rg3` 资源组，设置绝对优先级为 `HIGH`。绝对优先级目前支持 `LOW|MEDIUM|HIGH`，资源组的默认绝对优先级为 `MEDIUM`。\n \n     ```sql\n     CREATE RESOURCE GROUP IF NOT EXISTS rg3 RU_PER_SEC = 100 PRIORITY = HIGH;\n@@ -180,7 +185,7 @@ ALTER USER usr2 RESOURCE GROUP rg2;\n > **注意：**\n >\n > - 使用 `CREATE USER` 或者 `ALTER USER` 将用户绑定到资源组后，只会对该用户新建的会话生效，不会对该用户已有的会话生效。\n-> - TiDB 集群在初始化时会自动创建 `default` 资源组，其 `RU_PER_SEC` 的默认值为 `UNLIMITED` (等同于 `INT` 类型最大值，即 `2147483647`)，且为 `BURSTABLE` 模式。对于没有绑定资源组的语句会自动绑定至此资源组。此资源组不支持删除，但允许修改其 RU 的配置。\n+> - TiDB 集群在初始化时会自动创建 `default` 资源组，其 `RU_PER_SEC` 的默认值为 `UNLIMITED` (等同于 `INT` 类型最大值，即 `2147483647`)，且 `BURSTABLE` 为 `UNLIMITED` 模式。对于没有绑定资源组的语句会自动绑定至此资源组。此资源组不支持删除，但允许修改其 RU 的配置。\n \n 要解除用户与资源组的绑定，只需将其重新绑定到 `default` 资源组即可，如下所示：\n ",
      "sections": [
        {
          "section_path": "创建资源组",
          "content": "\n下面举例说明如何创建资源组。\n\n1. 创建 `rg1` 资源组，限额是每秒 500 RU，并且允许这个资源组的应用超额占用资源。不特意指定的话，其 `BURSTABLE` 模式为 `MODERATED`。\n\n    ```sql\n    CREATE RESOURCE GROUP IF NOT EXISTS rg1 RU_PER_SEC = 500 BURSTABLE;\n    ```\n\n2. 创建 `rg1` 资源组，限额是每秒 500 RU，并且允许这个资源组的应用超额占用资源，其模式为 `UNLIMITED`。\n\n    ```sql\n    CREATE RESOURCE GROUP IF NOT EXISTS rg1 RU_PER_SEC = 500 BURSTABLE=UNLIMITED;\n\n3. 创建 `rg2` 资源组，RU 的回填速度是每秒 600 RU。在系统资源充足的时候，不允许这个资源组的应用超额占用资源。\n\n    ```sql\n    CREATE RESOURCE GROUP IF NOT EXISTS rg2 RU_PER_SEC = 600;\n    ```\n\n4. 创建 `rg3` 资源组，设置绝对优先级为 `HIGH`。绝对优先级目前支持 `LOW|MEDIUM|HIGH`，资源组的默认绝对优先级为 `MEDIUM`。\n\n    ```sql\n    CREATE RESOURCE GROUP IF NOT EXISTS rg3 RU_PER_SEC = 100 PRIORITY = HIGH;\n    ```\n",
          "start_line": 133,
          "end_line": 158
        },
        {
          "section_path": "将用户绑定到资源组",
          "content": "\n下面的示例创建一个用户 `usr1` 并将其绑定到资源组 `rg1`。其中 `rg1` 为[创建资源组](#创建资源组)示例中创建的资源组。\n\n```sql\nCREATE USER 'usr1'@'%' IDENTIFIED BY '123' RESOURCE GROUP rg1;\n```\n\n下面示例使用 `ALTER USER` 将用户 `usr2` 绑定到资源组 `rg2`。其中 `rg2` 为[创建资源组](#创建资源组)示例中创建的资源组。\n\n```sql\nALTER USER usr2 RESOURCE GROUP rg2;\n```\n\n绑定用户后，用户新建立的会话对资源的占用会受到指定用量 (RU) 的限制。如果系统负载比较高，没有多余的容量，用户 `usr2` 的资源消耗速度会被严格控制不超过指定用量。由于 `usr1` 绑定的 `rg1` 配置了 `BURSTABLE`，所以 `usr1` 消耗速度允许超过指定用量。\n\n如果资源组对应的请求太多导致资源组的资源不足，客户端的请求处理会发生等待。如果等待时间过长，请求会报错。\n\n> **注意：**\n>\n> - 使用 `CREATE USER` 或者 `ALTER USER` 将用户绑定到资源组后，只会对该用户新建的会话生效，不会对该用户已有的会话生效。\n> - TiDB 集群在初始化时会自动创建 `default` 资源组，其 `RU_PER_SEC` 的默认值为 `UNLIMITED` (等同于 `INT` 类型最大值，即 `2147483647`)，且 `BURSTABLE` 为 `UNLIMITED` 模式。对于没有绑定资源组的语句会自动绑定至此资源组。此资源组不支持删除，但允许修改其 RU 的配置。\n\n要解除用户与资源组的绑定，只需将其重新绑定到 `default` 资源组即可，如下所示：\n\n```sql\nALTER USER 'usr3'@'%' RESOURCE GROUP `default`;\n```\n\n更多信息，请参见 [`ALTER USER ... RESOURCE GROUP`](/sql-statements/sql-statement-alter-user.md#修改用户绑定的资源组)。\n",
          "start_line": 168,
          "end_line": 197
        }
      ]
    }
  ]
}